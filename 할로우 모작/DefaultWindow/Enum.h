#pragma once

enum class OBJECT_TYPE		{ OBJ_TILE, OBJ_MONSTER, OBJ_BOSS, OBJ_EFFECT, OBJ_PLAYER, OBJ_PROJECTILE, OBJ_COLLI, OBJ_ENEMYCOLLI, OBJ_ENEMYPROJECTILE, OBJ_OBS, OBJ_UI, OBJ_HPUI, END};
enum class MONSTER_TYPE		{ FLY, MOS, HUSK, KNIGHT, NOMOVE_FLY, END};

enum class STATE			{ ST_IDLE, ST_LOOKDOWN, ST_LOOKUP, ST_WALK, ST_DASH, ST_HEAL, ST_HEALEND, ST_ENERGY_PO, ST_JUMP, ST_DOUBLEJUMP, ST_DOWN, ST_ATTACK, ST_TOPATTACK, ST_DOWNATTACK, ST_CLIMB, ST_HIT, ST_DEAD, ST_END };
enum class BAR_STATE		{ IDLE, BREAK, END};
enum class MANA_STATE		{ LOW, MIDDLE, HIGH, FULL, END};
enum class HP_STATE			{ SAFE, HIT, END };
enum class BOSS_STATE		{ IDLE, JUMP, DOWN, PATTERN1, PATTERN2, GROGY, HIT, GROGY_RECOVER, DEAD, END };
enum class MONSTER_STATE	{ IDLE, L_MOVE, R_MOVE, L_ATTACK, R_ATTACK, L_GUARD, R_GUARD, UL_GUARD, UR_GUARD, DEAD, END };

enum class EFFECT_PLAYER { L_ATTACK, R_ATTACK, UL_ATTACK, UR_ATTACK, DL_ATTACK, DR_ATTACK, L_HIT, R_HIT, RECOVER, L_Soul, R_Soul, END};

enum class DIR_TYPE { DIR_LEFT, DIR_UP, DIR_RIGHT, DIR_DOWN, DIR_END};
enum class COL_DIR	{ LEFT, TOP, RIGHT, BOTTOM, END};

enum class MENU_TYPE { START, END };

enum class SCENE_TYPE { SC_LOGO, SC_MENU, SC_STAGE, SC_STAGE2, SC_BOSS, SC_CLEAR, SC_EDIT, SC_END };
enum class RENDER_TYPE { RENDER_UI, RENDER_BACKGROUND, RENDER_GAMEOBJECT, RENDER_EFFECT, RENDER_END };

enum CHANNEL_TYPE 
{	PLAYERSOUND_EFFECT, PLAYERSOUND_HIT, HEALSOUND_EFFECT, ENERGYSOUND_EFFECT, SWORDSOUND_EFFECT,
	FLYSOUND_LOOP_0, FLYSOUND_LOOP_1, FLYSOUND_LOOP_2, FLYSOUND_LOOP_3, FLYSOUND_LOOP_4, FLYSOUND_LOOP_5,
	MOSSOUND_EFFECT, MOSSOUND_LOOP_0, MOSSOUND_LOOP_1, MOSSOUND_LOOP_2, MOSSOUND_LOOP_3, MOSSOUND_LOOP_4, MOSSOUND_LOOP_5,
	HUSKSOUND_EFFECT, 
	KNIGHTSOUND_EFFECT,
	NOFLYSOUND_LOOP_0, NOFLYSOUND_LOOP_1, NOFLYSOUND_LOOP_2, NOFLYSOUND_LOOP_3,
	BOSSSOUND_EFFECT, BOSSSOUND_ATTACK, BOSSSOUND_JUMP, BOSSSOUND_GROGY,
	SOUND_BGM, MAXCHANNEL 
};


static int g_FlyCount;
static int g_MosCount;
static int g_HuskCount;
static int g_KnightCount;
static int g_NoFlyCount;